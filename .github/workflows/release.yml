name: Release and PyPi
on:
  pull_request:
    branches:
    - 'release'

jobs:
  linux-build:
    name: Linux Build
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: PDM
        run: python3.12 -m pip install pdm

      - name: Install libkrb5-dev
        run: sudo apt-get install -y libkrb5-dev

      - name: Installs dev deps and package
        run : |
          pdm export -f requirements --without-hashes --dev > requirements.txt
          python3.12 -m pip install -r requirements.txt

      - name: Build
        run: |
          python3.12 -m nuitka --standalone --onefile --output-filename=ldeep.bin ldeep/__main__.py
          mv ldeep.bin ldeep_linux-amd64

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: linux
          path: ldeep_linux-amd64

  windows-build:
    name: Windows Build
    runs-on: "windows-latest"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.12"
      - name: PDM
        run: python3 -m pip install pdm

      - name: Installs dev deps and package
        run: |
          pdm export -f requirements --without-hashes --dev > requirements.txt
          python3 -m pip install -r requirements.txt

      - name: Build
        run: |
          python3 -m nuitka --standalone --assume-yes-for-downloads --output-filename=ldeep.exe --onefile ldeep/__main__.py
          mv ldeep.exe ldeep_windows-amd64.exe
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: windows
          path: ldeep_windows-amd64.exe

  macos-build:
    name: MacOS ARM64 Build
    runs-on: "macos-latest"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: PDM
        run: python3.12 -m pip install pdm

      - name: Installs dev deps and package
        run: |
          pdm export -f requirements --without-hashes --dev > requirements.txt
          python3.12 -m pip install -r requirements.txt

      - name: Build
        run: |
          python3.12 -m nuitka --standalone --onefile --output-filename=ldeep.bin ldeep/__main__.py
          mv ldeep.bin ldeep_macos-amd64

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: macos
          path: ldeep_macos-amd64
  release:
    needs: [linux-build, windows-build, macos-build]
    name: "Tagged release"
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get local version
        run: echo "version=$(cat VERSION)" >> $GITHUB_ENV

      - name: Build sdist
        run: pdm build -d sdist --no-wheel

      - name: Create tag
        uses: rickstaa/action-create-tag@v1
        with:
          tag: ${{ env.version }}

      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v4

      - name: Create the release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.version }}
          files: |
            linux/ldeep_linux-amd64
            windows/ldeep_windows-amd64.exe
            macos/ldeep_macos-amd64

      - name: Upload to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: sdist/
